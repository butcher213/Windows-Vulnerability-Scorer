To dos:
	have scoringsystem.py handle service uptime and errors, too
	build a GUI for the external file, so it doesn't need python installed to configure.
	Build OS recognition (have the scoring system modify its own code to determine folder 
		structure and eliminate errors when installing on a different system)
	Add scoring for DNS uptime and vulnerabilities
	Add scoring for SMB uptime and vulnerabilities
Version 3.1:
	firefoxprefsscorer.py detects the appdata directory, rather than erroring when installed
	Scoringsystem.py does error checking for the audio, and lets the competitior know about any errors
	Added Xampp scoring
Version 3.0:
	10/12/17
	All major vulnernability types are now scored. The comprehensive list is below:
		FTP
		HTTP
		FileZilla
		File Permissions*
		Registry values (IE ESC, screen saver, and smart screen)
		Remote Desktop settings in Administrative Templates*
		Internet options for IE*
		Firefox
		3rd party updates
		Forensics questions
			* indicates new additions
	Together, with the Cyberpatriot scoring system, This software can score everything
	a competition scoring system can.
Version 2.3:
	Added a basic installer script
	Added scoring for FileZilla and registry
	Fixed a bug in scoringsystem.py that made cp points worth 2
	Made updates now score either the target version, or a higher version.
Version 2.2:
	10/3/17
	Fixed audio feedback on the service side
Version 2.1:
	9/28/17
	Added in audio feedback for vulnerabilities
	Also made it more lightweight through doing fileprocessing only if the score changes
	Decreased checking interval to 5 seconds.
Version 2.0
	9/28/17
	The External File Update! 
	All vulnerabilities are located in a single file called configVariables.py. This allows for someone to easily change whatever vulnerabilies they want to score
Version 1.2
	9/19/17
	Streamlined and "lightened" the process of writing vulnerabilitites to the webpage. Before, each module would do it individually, resulting in 4-5 programs trying to read and write data to the same file nearly instantaneously, which sucked up processing speed. Now, only scoringsystem.py writes vulnerability data to the webpage. Service uptime arrows and errors were NOT affected, for now.
	
	Also changed how scoringsystem.py handles processing of data from the modules. Now, once retrieved from the modules, data is read dynamically with a for loop.

Version 1.1:
	9/19/15
	Second build
	Also scores firefox and 3rd party updates

Version 1.0:
	first build. 
	scores ftp, http, and forensics