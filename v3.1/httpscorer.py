# This program scores IIS
#
# Created by: Trevor Butcher
#
import httplib as http
import configVariables as cv
def scorehttp():
    #init the error and points variables
    if cv.HTTP_scoreUptime == True:
        errors = []

        try:
            #try connecting to the website
            httpsite = http.HTTPConnection(cv.HTTP_server)
        except:
            errors.append('HTTP: The scoring system does not detect an HTTP site at ' + cv.HTTP_server + ':80')
        else:
            #get the server http code. 200 is a successful http query
            httpsite.request('HEAD', '')
            httpCode = httpsite.getresponse().status
            if httpCode != 200:
                errors.append('The server returned an error code of ' + str(httpCode))
        #Generate variables that store the raw html
        errorList = '<span id="httperrortarget">'
        serviceTableValues = '<td id="http_table">'

        #loop through errors
        for error in errors:
            errorList += "HTTP: " + error + "<br/>"

        #if no errors, display service being up
        if len(errors) == 0:
            serviceTableValues += '<img src="service_up.png" height="50"/>'
        else:
            serviceTableValues += '<img src="service_down.png" height="50"/>'

        #append the parts used to locate the strings for the next iteration
        serviceTableValues += '</td><!--httpstop-->'
        errorList += "</span><!--httperrorstop-->"
        webPatched = ''
        webBottom = ''
        #retrieve the webpage data
        webpage = open("scores.html", "r+")
        webData = webpage.read()
        webpage.close()

        # split webdata for the service uptime
        webSplit = webData.split('<td id="http_table">')
        webSplit.append(webSplit[1].split('</td><!--httpstop-->'))

        #piece it back together
        webPatched += webSplit[0] + serviceTableValues
        webBottom = webSplit[2][1]
        # split webdata for errors
        webSplit = webBottom.split('<span id="httperrortarget">')
        webSplit.append(webSplit[1].split('</span><!--httperrorstop-->'))

        #piece it back together
        webPatched += webSplit[0] + errorList
        webBottom = webSplit[2][1]

        #write the data to the webfile
        webpage = open("scores.html", "w")
        webpage.write(str(webPatched) + webBottom)
        webpage.close()
